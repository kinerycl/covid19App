{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/image.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","console","log","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","varient","url","fetchData","country","a","changeableUrl","axios","get","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defualt","onChange","e","target","i","key","App","state","fetchedData","setState","this","image","src","coronaImage","alt","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a20011ee.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"card\":\"Cards_card__eGUfZ\",\"infected\":\"Cards_infected__-adYp\",\"recovered\":\"Cards_recovered__1aizD\",\"deaths\":\"Cards_deaths__Qdjzq\"};","import React from \"react\";\nimport {Card, CardComponent, Typography, Grid, CardContent} from '@material-ui/core';\nimport CountUp from 'react-countup';\nimport cx from 'classnames';\n\nimport styles from './Cards.module.css';\nconst Cards = ({data:{confirmed, recovered, deaths, lastUpdate}}) => {\n    console.log(confirmed);\n    if(!confirmed){\n        return \"Loading...\"\n    }\n    return (\n        <div className={styles.container}>\n            <Grid container spacing={3} justify=\"center\">\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\n                    <CardContent>\n                        <Typography color =\"textSecondary\" gutterBottom>Infected</Typography>\n                        <Typography variant=\"h5\" gutterBottom>\n                            <CountUp start={0} end={confirmed.value} duration={2.5} separator=\",\"/>\n                            </Typography>\n                        <Typography color =\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n                        <Typography varient=\"body2\">Number of Active Cases of Covid-19</Typography>\n                    </CardContent>\n                </Grid>\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\n                    <CardContent>\n                        <Typography color =\"textSecondary\" gutterBottom>Recovered</Typography>\n                        <Typography variant=\"h5\" gutterBottom>\n                            <CountUp start={0} end={recovered.value} duration={2.5} separator=\",\"/>\n                        </Typography>\n                        <Typography color =\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n                        <Typography varient=\"body2\">Number of Recoveries of Covid-19</Typography>\n                    </CardContent>\n                </Grid>\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\n                    <CardContent>\n                        <Typography color =\"textSecondary\" gutterBottom>Deaths</Typography>\n                        <Typography variant=\"h5\" gutterBottom>\n                            <CountUp start={0} end={deaths.value} duration={2.5} separator=\",\"/>\n                        </Typography>\n                        <Typography color =\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n                        <Typography varient=\"body2\">Number of Deaths caused by Covid-19</Typography>\n                    </CardContent>\n                </Grid>\n            </Grid>\n        </div>\n    )\n}\n\nexport default Cards;","import axios from 'axios';\n\nconst url = 'https://covid19.mathdro.id/api';\n\nexport const fetchData = async (country) => {\n    let changeableUrl = url;\n\n    if(country){\n        changeableUrl = `${url}/countries/${country}`;\n    }\n    try{\n    \n        const {data :{confirmed,recovered,deaths,lastUpdate}} = await axios.get(changeableUrl);\n\n        return { confirmed,recovered,deaths,lastUpdate, };\n    \n\n    }catch (error){\n        console.log(error);\n    }\n}\n\n export const fetchDailyData  = async ()=> {\n     try {\n         const {data} = await axios.get(`${url}/daily`);\n         const modifiedData = data.map((dailyData) => ({\n             confirmed: dailyData.confirmed.total,\n             deaths: dailyData.deaths.total,\n             date: dailyData.reportDate,\n         }));\n       // console.log(data);\n         //console.log(modifiedData);\n        return modifiedData;\n     } catch (error) {\n         console.log(error);\n     }\n }\n\n export const fetchCountries = async () => {\n     try {\n        const {data:{countries}} = await axios.get(`${url}/countries`);\n        return countries.map((country)=>country.name);\n     } catch (error) {\n         console.log(error);\n     }\n }","import React, {useState, useEffect} from \"react\";\nimport { fetchDailyData } from '../../api';\nimport {Line, Bar} from 'react-chartjs-2';\nimport styles from './Chart.module.css';\n\nconst Chart = ({data:{confirmed, recovered, deaths}, country}) => {\n    const [dailyData, setDailyData] = useState([]);\n\n    useEffect(()=> {\n        const fetchAPI = async () => {\n            setDailyData(await fetchDailyData());\n        }\n\n        //console.log(dailyData);\n        fetchAPI();\n    }, []);\n    \n    const lineChart = (\n        dailyData.length \n        ? (<Line\n            data={{\n                labels: dailyData.map(({date}) => date),\n                datasets:[{\n                    data: dailyData.map(({confirmed})=> confirmed),\n                    label: 'Infected',\n                    borderColor: \"#3333ff\",\n                    fill: true,\n                }, {\n                    data: dailyData.map(({confirmed})=> confirmed),\n                    label: 'Infected',\n                    borderColor: \"red\",\n                    backgroundColor: 'rgba(255, 0, 0, 0.5)',\n                    fill: true,\n                }],\n            }}\n        />) : null\n    );\n\n    const barChart = (\n        confirmed\n        ? (\n            <Bar\n             data={{\n                 labels:['Infected', 'Recovered', 'Deaths'],\n                 datasets:[{\n                    label:'People',\n                    backgroundColor:['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\n                    data:[confirmed.value, recovered.value, deaths.value]\n                 }]\n\n            } }\n            options={{\n                legend:{display:false},\n                title:{display:true, text: `Current state in ${country}`},\n            }}\n            />\n        ) : null\n    )\n\n    return (\n        <div className={styles.container}>\n            {country? barChart : lineChart}\n        </div>\n    )\n}\n\nexport default Chart;","import React, {useState, useEffect} from \"react\";\nimport {NativeSelect, FormControl} from '@material-ui/core';\nimport { fetchCountries } from '../../api';\n\nimport styles from './CountryPicker.module.css';\n\nconst CountryPicker = ({handleCountryChange}) => {\n    const [fetchedCountries, setFetchedCountries] = useState([]);\n    useEffect(()=>{\n        const fetchAPI = async () => {\n            setFetchedCountries(await fetchCountries());\n        }\n        fetchAPI();\n    }, [setFetchedCountries]);\n\n    return (\n        <FormControl className={styles.formControl}>\n            <NativeSelect defualt=\"\" onChange={(e)=>handleCountryChange(e.target.value)}>\n                <option value=\"\">Global</option>\n                {fetchedCountries.map((country, i)=> <option key={i} value={country}>{country}</option>)}\n            </NativeSelect>\n        </FormControl>\n    )\n}\n\nexport default CountryPicker;","import React from 'react';\n\nimport { Cards, Chart, CountryPicker } from './components';\nimport styles from './App.module.css';\nimport {fetchData} from './api/index';\nimport coronaImage from './images/image.png';\n\nclass App extends React.Component{\n    state = {\n        data : {},\n        country: '',\n    }\n    async componentDidMount(){\n        const fetchedData = await fetchData();\n        this.setState({data:fetchedData});\n    }\n\n    handleCountryChange =  async (country) => {\n        const fetchedData = await fetchData(country);\n        //console.log(fetchedData);\n        //console.log(country);\n        this.setState({data: fetchedData, country: country});\n    }\n    render() {\n        const {data, country} = this.state;\n        return(\n            <div className={styles.container}>\n                <img className={styles.image} src={coronaImage} alt=\"COVID-19\"/>\n                <Cards data={data}/>\n                <CountryPicker handleCountryChange={this.handleCountryChange}/>\n                <Chart data={data} country={country}/>\n            </div>\n        )\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"image\":\"App_image__3byI1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1PIOn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2p8f9\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}